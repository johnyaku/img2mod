#! /bin/bash

# Create config file to be used to create a module
 
echo "Search Biocontainers (https://biocontainers.pro/registry) or DockerHub (https://hub.docker.com/)."
echo "No need to create an account to use this tool, although there are other good reasons to sign up."
echo "Select [Packages and Containers] (Biocontainers) or [Tags] (DockerHub)."
echo "Find the version you want to install and click the [copy] icon next to the [docker pull] string for that tag/version"
echo "Note: using [latest] breaks reproducibility and so is not recommended."
echo

read -p "Enter docker pull string: " docker pull string

# First extract tag
IFS=":"
declare -a field=($string)
image_repo=${field[0]}
tag=${field[1]}

# Next extract host and repository
IFS="/"
declare -a field=($image_repo)
image=${field[-1]}
if [ "${#field[@]}" -eq "2" ]; then
  repo=${field[0]}
elif [ "${#field[@]}" -eq "3" ]; then
  repo=${field[0]}/${field[1]} 
else
  echo "Malformed docker pull string"
  exit 1
fi

echo
echo "Detected the following repo, image and tag..."
echo -e "Repo: \t $repo"
echo -e "Image: \t $image"
echo -e "Tag: \t $tag"
echo

echo "Enter the name of the tool (the name to be used for the module)"
echo "Usually this is the same as the image name, but not always."
echo "Press <Enter> or <Return> to accept the default value in brackets."

read -p "Tool [$image]: " tool
tool=${tool:-$image}
echo

echo "Enter the containerised command."
echo "Usually this is the same as the image name, but not always."
echo "For example, the image name for VEP is [ensembl-vep] but the command is [vep]."
echo "Pay particular attention to capitalisation."
echo "For example, the image name for QTLtools is [qtltools] but the command is [QTLtools]."
echo "Press <Enter> or <Return> to accept the default value in brackets."
echo "But check carefully first."
echo

read -p "Command [$image}]: " command
command=${command:-$image}

echo "This tool does not (yet) handle man paths."
echo "(And not all bioinformatics tools provide man pages anyway...)"
echo "Be kind to users by providing a link to the reference manual for this tool."
echo


read -p "Reference URL: " reference
reference=${reference:-"(reference not specified)"}
IFS=" "
echo

config_filename=${tool}_${tag}.config
if [ -e $config_filename ]; then
  echo "File already exists: $config_filename"
  echo "Delete or rename, then try again"
  exit 1
fi
touch $config_filename
echo "tool=$tool" >> $config_filename 
echo "repo=$repo" >> $config_filename 
echo "image=$image" >> $config_filename 
echo "tag=$tag" >> $config_filename
echo "command=$command" >> $config_filename
echo "reference=$reference" >> $config_filename
echo
echo "Created config file as $config_filename in current working directory."
echo
echo "Contents of config file:"
cat $config_filename
echo
echo "Run the following command to download the container and create a wrapper file and modulefile..."
echo "make_mod $config_filename"
